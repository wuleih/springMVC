<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"  
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:dubbo="http://code.alibabatech.com/schema/dubbo"   xmlns:context="http://www.springframework.org/schema/context"
  xsi:schemaLocation="http://www.springframework.org/schema/beans  
    http://www.springframework.org/schema/beans/spring-beans.xsd 
    http://www.springframework.org/schema/context  
    http://www.springframework.org/schema/context/spring-context-4.1.xsd
    http://code.alibabatech.com/schema/dubbo  
    http://code.alibabatech.com/schema/dubbo/dubbo.xsd
    ">   
    <!-- http://www.springframework.org/schema/tool  
    http://www.springframework.org/schema/tool/tool.xsd --> 
    
    <!-- 属性配置文件 -->
	<context:property-placeholder location="classpath:/config.properties" />
	
    <!-- Activates annotation-based bean configuration -->
	<context:annotation-config />
	
    <!-- 具体的实现bean -->
    <bean id="exampleSoaService" class="com.o2o.soa.impl.ExampleSoaServiceImpl" />  
    <bean id="accountSoaService" class="com.o2o.soa.impl.AccountSoaServiceImpl" /> 
    <bean id="wxAuthoritySoaService" class="com.o2o.soa.impl.WxAuthoritySoaServiceImpl" />  
	
    <!-- 提供方应用信息，用于计算依赖关系 -->  
    <dubbo:application name="${dubbo.provider.application.name}"  />   
    <dubbo:provider  timeout="300000"></dubbo:provider>     
    <!-- 使用zookeeper注册中心暴露服务地址 -->  
    <dubbo:registry address="${dubbo.registry.address}" />
    <!-- <dubbo:registry address="zookeeper://10.20.153.10:2181?backup=10.20.153.11:2181,10.20.153.12:2181"/> -->
    <!-- <dubbo:registry address="127.0.0.1:2181,127.0.0.1:2182,127.0.0.1:2183" />    -->  
    
    <!-- 分成多组注册中心 -->
    <!-- <dubbo:registry id="chinaRegistry" protocol="zookeeper" address="10.20.153.10:2181" group="china"/>
    <dubbo:registry id="intlRegistry" protocol="zookeeper" address="10.20.153.10:2181" group="intl"/> -->
    
    <!-- <dubbo:protocol name="dubbo" serialization="kryo" optimizer="yjmyzz.dubbo.demo.api.SerializationOptimizerImpl"/>
    use tomcat server
    <dubbo:protocol name="rest" port="8888" threads="500" contextpath="services" server="tomcat" accepts="500"
          extension="com.alibaba.dubbo.rpc.protocol.rest.support.LoggingFilter"/> -->
    
    <!-- 用dubbo协议在20880端口暴露服务 hessian2序列化会丢属性  指定Ip -->  
    <dubbo:protocol host="127.0.0.1" name="dubbo" port="${dubbo.protocol.port}" serialization="java" />  
    <!--<dubbo:protocol host="192.168.15.62" name="dubbo" port="${dubbo.protocol.port}" serialization="java" />   -->
    <dubbo:monitor protocol="registry"></dubbo:monitor>
    
    <!-- 声明需要暴露的服务接口 -->
    <!-- 具体的实现bean -->
    <dubbo:service interface="com.o2o.soa.service.ExampleSoaService" ref="exampleSoaService" />
    <dubbo:service interface="com.o2o.soa.service.AccountSoaService" ref="accountSoaService" />
    <dubbo:service interface="com.o2o.soa.service.WxAuthoritySoaService" ref="wxAuthoritySoaService" />
</beans>