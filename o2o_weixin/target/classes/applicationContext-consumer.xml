<?xml version="1.0" encoding="UTF-8"?>  
<beans xmlns="http://www.springframework.org/schema/beans"  
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:dubbo="http://code.alibabatech.com/schema/dubbo"  xmlns:context="http://www.springframework.org/schema/context"
    xsi:schemaLocation="http://www.springframework.org/schema/beans  
        http://www.springframework.org/schema/beans/spring-beans.xsd  
        http://code.alibabatech.com/schema/dubbo  http://code.alibabatech.com/schema/dubbo/dubbo.xsd 
        http://www.springframework.org/schema/context  http://www.springframework.org/schema/context/spring-context-4.1.xsd">
        
    <!--  属性配置文件 -->
	<context:property-placeholder location="classpath:/config.properties" />
	<!-- Activates annotation-based bean configuration -->
	<context:annotation-config />
	     
	<dubbo:consumer timeout="10000" retries="0" />
    <!-- 消费方应用名，用于计算依赖关系，不是匹配条件，不要与提供方一样  -->
    <dubbo:application name="${dubbo.consumer.application.name}" />     
      <!-- 使用multicast广播注册中心暴露发现服务地址  -->  
    <!-- <dubbo:registry  protocol="zookeeper" address="${dubbo.registry.address}" />  --> 
    <dubbo:registry  protocol="zookeeper" address="${dubbo.registry.address}" /> 
    
    <!--  生成远程服务代理，可以和本地bean一样使用exampleSoaService  -->
    <dubbo:reference id="exampleSoaService" interface="com.o2o.soa.service.ExampleSoaService" />
    <dubbo:reference id="accountSoaService" interface="com.o2o.soa.service.AccountSoaService" />
    <dubbo:reference id="wxAuthoritySoaService" interface="com.o2o.soa.service.WxAuthoritySoaService" />    
</beans>