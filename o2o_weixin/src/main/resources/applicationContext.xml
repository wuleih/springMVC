<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:task="http://www.springframework.org/schema/task"
	xsi:schemaLocation="
   http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
   http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.1.xsd
   http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.1.xsd
   http://www.springframework.org/schema/context  http://www.springframework.org/schema/context/spring-context-4.1.xsd 
   http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-4.1.xsd    
   ">
	<!-- 属性配置文件 -->
	<context:property-placeholder location="classpath:/config.properties" />
	
	<!-- Activates annotation-based bean configuration -->
	<context:annotation-config />

	<!-- 使用Annotation自动注册Bean，解决事物失效问题：在主容器中不扫描@Controller注解，在SpringMvc中只扫描@Controller注解。 -->
	<context:component-scan base-package="com.o2o.weixin">
		<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller" />
	</context:component-scan>
	
	<bean id="springUtils" class="com.o2o.util.SpringUtils"></bean>

	<bean id="stringHttpMessageConverter" class="org.springframework.http.converter.StringHttpMessageConverter">
		<constructor-arg index="0" value="UTF-8"></constructor-arg>
		<property name="supportedMediaTypes">
			<list>
				<value>text/plain;charset=UTF-8</value>
				<value>text/html;charset=UTF-8</value>
				<value>application/json;charset=UTF-8</value>
			</list>
		</property>
	</bean>
	<bean id="json2HttpMessageConverter" class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter"></bean>
	<bean id="resourceHttpMessageConverter" class="org.springframework.http.converter.ResourceHttpMessageConverter"></bean>
	<bean id="byteArrayHttpMessageConverter" class="org.springframework.http.converter.ByteArrayHttpMessageConverter"></bean>
	<bean id="sourceHttpMessageConverter" class="org.springframework.http.converter.xml.SourceHttpMessageConverter"></bean>
	<!-- 国际化 -->
	<bean id="messageSource"
		class="org.springframework.context.support.ResourceBundleMessageSource">
		<property name="basenames">
			<list>
				<value>messages.messages</value>
			</list>
		</property>
	</bean>
	
	<bean id="localeResolver" class="org.springframework.web.servlet.i18n.FixedLocaleResolver">
		<property name="defaultLocale" value="zh_CN" />
	</bean>
	
	<!-- 定时任务 -->
	<task:scheduler id="taskScheduler" pool-size="10"/>  
	<task:annotation-driven scheduler="taskScheduler" mode="proxy" />
	
	<!-- 验证码 -->
	<bean id="captchaProducer" class="com.google.code.kaptcha.impl.DefaultKaptcha">
		<property name="config">
			<bean class="com.google.code.kaptcha.util.Config">
				<constructor-arg>
					<props>
						<prop key="kaptcha.border">no</prop>						
						<prop key="kaptcha.textproducer.char.length">4</prop>						
					</props>
				</constructor-arg>
			</bean>
		</property>
	</bean>  
	
	<!-- <bean id="poolConfig" class="redis.clients.jedis.JedisPoolConfig">
    	<property name="minIdle" value="${redis.pool.minIdle}" />
        <property name="maxIdle" value="${redis.pool.maxIdle}" />  
        <property name="maxTotal" value="${redis.pool.maxActive}" />  
        <property name="maxWaitMillis" value="${redis.pool.maxWait}" />  
        <property name="testOnBorrow" value="${redis.pool.testOnBorrow}" />  
    </bean>  
    
    <bean id="jedisConnectionFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory">
        <property name="hostName" value="${redis.host}" />
        <property name="port" value="${redis.port}" />
        <property name="password" value="${redis.password}" />
        <property name="usePool" value="true" />
        <property name="poolConfig" ref="poolConfig" />
    </bean> 
    
    redis template definition
	<bean id="redisTemplate" class="org.springframework.data.redis.core.RedisTemplate">
		<property name="connectionFactory" ref="jedisConnectionFactory" />
		<property name="keySerializer">
			<bean class="org.springframework.data.redis.serializer.StringRedisSerializer" />
		</property>	
		<property name="valueSerializer">
			<bean class="org.springframework.data.redis.serializer.JdkSerializationRedisSerializer" />
		</property>
		<property name="hashKeySerializer">  
	       <bean class="org.springframework.data.redis.serializer.StringRedisSerializer"/>  
	    </property>
	    <property name="hashValueSerializer">
	       <bean class="org.springframework.data.redis.serializer.JdkSerializationRedisSerializer"/>  
	    </property>
	</bean>
    
    redis session
    <bean id="httpSessionStrategy" class="org.springframework.session.web.http.CookieHttpSessionStrategy"/>    
	<bean id="redisHttpSessionConfiguration" class="org.springframework.session.data.redis.config.annotation.web.http.RedisHttpSessionConfiguration">
		<property name="httpSessionStrategy" ref="httpSessionStrategy"></property>
		<property name="maxInactiveIntervalInSeconds" value="1800" />
	</bean> -->
	
	<bean id="erpSystemInfo" class="com.o2o.ao.SystemInfo">
		<property name="mobileDomain"><value>${app.mobile.domain}</value></property>
		<property name="imageDomain"><value>${image.domain}</value></property>	
		<property name="weiXinAppId"><value>${micro.msg.appId}</value></property>
		<property name="weiXinEncodingAesKey"><value>${micro.msg.encodingAESKey}</value></property>	
	    <property name="weiXinCookieEntry"><value>${micro.msg.cookie.entry}</value></property>  
	    <property name="weiXinCookieRedirectUri"><value>${micro.msg.cookie.auth.redirect.uri}</value></property> 
	    <property name="weiXinCookieAppid"><value>${micro.msg.cookie.appid}</value></property>	
	    <property name="weiXinCookieEnableBind"><value>${micro.msg.cookie.auth.enable.bind}</value></property>
	</bean>
</beans> 
